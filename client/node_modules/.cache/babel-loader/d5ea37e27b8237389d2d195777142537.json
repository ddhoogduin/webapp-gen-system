{"ast":null,"code":"import _classCallCheck from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/tmpVersion/back_end_afst_system/src/components/pages/client/form/OverviewFormClient.js\";\nimport React, { Component } from 'react';\nimport { Button, Icon, Table, Checkbox } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nimport clientComponentDescription from '../../../modules/clientComponentDescription';\nimport ComponentFrame from '../../../modules/ComponentFrame';\n\nvar OverviewFormClient =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OverviewFormClient, _Component);\n\n  function OverviewFormClient() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OverviewFormClient);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OverviewFormClient)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderTableHeaders = function () {\n      return React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, _this.props.tableHeaders.map(function (header, index) {\n        return React.createElement(Table.HeaderCell, {\n          key: \"formTableHeader-\".concat(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, header.label);\n      })));\n    };\n\n    _this.renderColumnValue = function (rowIndex, attribute, format, formItem) {\n      switch (format) {\n        case 'slide':\n          return React.createElement(Checkbox, {\n            slider: true,\n            color: 'green',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          });\n\n        case 'row-number':\n          return rowIndex + 1;\n\n        case 'link-detail':\n          return React.createElement(Link, {\n            to: \"/client/\".concat(_this.props.client.alias, \"/form/\").concat(formItem.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, formItem[attribute]);\n\n        default:\n          return formItem[attribute];\n      }\n    };\n\n    _this.renderTableRow = function (formItem, indexRow) {\n      return _this.props.tableHeaders.map(function (columnItem, index) {\n        return React.createElement(Table.Cell, {\n          key: \"formTableRow-\".concat(indexRow, \"-item\").concat(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, _this.renderColumnValue(indexRow, columnItem.name, columnItem.format, formItem));\n      });\n    };\n\n    _this.renderTableContent = function () {\n      return React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, _this.props.listFormClient.map(function (formItem, index) {\n        return React.createElement(Table.Row, {\n          key: \"formTableRow-\".concat(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, _this.renderTableRow(formItem, index));\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(OverviewFormClient, [{\n    key: \"render\",\n    // render form overview\n    value: function render() {\n      return React.createElement(ComponentFrame, {\n        name: 'Forms',\n        description: 'Overview of client forms',\n        breadCrumb: \"\".concat(this.props.client.name, \" / Forms\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Table, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.renderTableHeaders(), this.renderTableContent(), React.createElement(Table.Footer, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Table.HeaderCell, {\n        colSpan: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Button, {\n        floated: \"right\",\n        icon: true,\n        labelPosition: \"left\",\n        primary: true,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"clipboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), \" Add new form\"))))));\n    }\n  }]);\n\n  return OverviewFormClient;\n}(Component);\n\nexport default OverviewFormClient;","map":{"version":3,"sources":["/var/www/html/tmpVersion/back_end_afst_system/src/components/pages/client/form/OverviewFormClient.js"],"names":["React","Component","Button","Icon","Table","Checkbox","Link","clientComponentDescription","ComponentFrame","OverviewFormClient","renderTableHeaders","props","tableHeaders","map","header","index","label","renderColumnValue","rowIndex","attribute","format","formItem","client","alias","id","renderTableRow","indexRow","columnItem","name","renderTableContent","listFormClient"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {\n    Button,\n    Icon,\n    Table,\n    Checkbox\n} from 'semantic-ui-react'\n\nimport {Link} from \"react-router-dom\";\nimport clientComponentDescription from '../../../modules/clientComponentDescription'\nimport ComponentFrame from '../../../modules/ComponentFrame'\n\nclass OverviewFormClient extends Component{\n\n    renderTableHeaders = () =>(\n            <Table.Header>\n                <Table.Row>{\n                    this.props.tableHeaders.map(\n                        (header, index) => <Table.HeaderCell key={`formTableHeader-${index}`}>{header.label}</Table.HeaderCell>\n                    )\n                }\n                </Table.Row>\n            </Table.Header>\n    );\n\n    renderColumnValue = (rowIndex, attribute, format, formItem) =>{\n        switch (format) {\n            case 'slide':\n                return <Checkbox slider color={'green'} />;\n            case 'row-number':\n                return (rowIndex+1);\n            case 'link-detail':\n                return (\n                    <Link to={`/client/${this.props.client.alias}/form/${formItem.id}`} >\n                        {formItem[attribute]}\n                    </Link>\n                );\n            default:\n                return formItem[attribute];\n        }\n    };\n    renderTableRow = (formItem, indexRow) =>{\n        return this.props.tableHeaders.map(\n            (columnItem, index) => (\n            <Table.Cell key={`formTableRow-${indexRow}-item${index}`}>\n                {this.renderColumnValue(indexRow, columnItem.name, columnItem.format, formItem)}\n            </Table.Cell>)\n        )\n    };\n    renderTableContent = () => (\n        <Table.Body>\n            {\n                this.props.listFormClient.map(\n                    (formItem, index) => (\n                        <Table.Row key={`formTableRow-${index}`}>\n                            {this.renderTableRow(formItem, index)}\n                        </Table.Row>\n                    )\n                )\n            }\n        </Table.Body>\n    );\n    // render form overview\n    render() {\n        return(\n            <ComponentFrame\n                name={'Forms'}\n                description={'Overview of client forms'}\n                breadCrumb={`${this.props.client.name} / Forms`}\n            >\n            <Table basic>\n                {this.renderTableHeaders()}\n                {this.renderTableContent()}\n                <Table.Footer fullWidth>\n                    <Table.Row>\n                        <Table.HeaderCell />\n                        <Table.HeaderCell colSpan='4'>\n                            <Button floated='right' icon labelPosition='left' primary size='small'>\n                                <Icon name='clipboard' /> Add new form\n                            </Button>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>\n            </ComponentFrame>\n        )\n    }\n}\n\nexport default OverviewFormClient"]},"metadata":{},"sourceType":"module"}