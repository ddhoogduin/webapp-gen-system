{"ast":null,"code":"import _classCallCheck from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/tmpVersion/back_end_afst_system/src/components/pages/client/form/DetailFormClient.js\";\nimport React, { Component } from 'react';\nimport { Button, Icon, Table, Checkbox, Form, Tab, Dropdown, Popup } from 'semantic-ui-react';\nimport ComponentFrame from \"../../../modules/ComponentFrame\";\nimport { Field, reduxForm, change } from \"redux-form\";\nimport { textInput, sliderInput, selectInput } from \"../../../helpers/redux-form-inputs\";\nimport { required } from \"../../../../constants/formValidationRules\";\nimport _ from 'lodash';\n\nvar DetailFormClient =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DetailFormClient, _Component);\n\n  function DetailFormClient() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DetailFormClient);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DetailFormClient)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.panes = [{\n      menuItem: 'Form',\n      render: function render() {\n        return React.createElement(Tab.Pane, {\n          key: 'detailFormCLient-tab1',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, _this.mainForm());\n      }\n    }, {\n      menuItem: 'Inputs',\n      render: function render() {\n        return React.createElement(Tab.Pane, {\n          key: 'detailFormCLient-tab2',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, _this.inputsForm());\n      }\n    }, {\n      menuItem: 'Config',\n      render: function render() {\n        return React.createElement(Tab.Pane, {\n          key: 'detailFormCLient-tab3',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"test\");\n      }\n    }];\n    _this.options = [{\n      key: 't',\n      text: 'Text',\n      value: 'text'\n    }, {\n      key: 'f',\n      text: 'File',\n      value: 'file'\n    }, {\n      key: 's',\n      text: 'Select',\n      value: 'select'\n    }];\n\n    _this.onSubmit = function (formValues) {\n      _this.props.onSubmit(formValues);\n    };\n\n    _this.generateInputOption = function (id) {\n      _this.props.generateInputOption(id);\n\n      _this.props.dispatch(change('detailFormClient', \"genOptionValue-\".concat(id), ''));\n\n      _this.props.dispatch(change('detailFormClient', \"genOptionLabel-\".concat(id), ''));\n    };\n\n    _this.removeInputOption = function (id, index) {\n      _this.props.removeInputOption(id, index);\n    };\n\n    _this.renderInputOptionList = function (options, keyId) {\n      return React.createElement(Table, {\n        padded: true,\n        celled: true,\n        size: \"small\",\n        style: {\n          'minWidth': 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        width: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Label\"), React.createElement(Table.HeaderCell, {\n        width: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Value\"), React.createElement(Table.HeaderCell, {\n        width: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" \"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, _.values(options).map(function (item, key) {\n        return React.createElement(Table.Row, {\n          key: \"optionInput-\".concat(keyId, \"-\").concat(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, item.text), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, item.value), React.createElement(Table.Cell, {\n          textAlign: 'center',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"red\",\n          icon: 'minus',\n          onClick: function onClick() {\n            return _this.removeInputOption(keyId, item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        })));\n      })), React.createElement(Table.Footer, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"genOptionLabel-\".concat(keyId),\n        component: textInput,\n        inputAttr: {\n          fluid: true,\n          placeholder: 'Text',\n          type: 'text'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"genOptionValue-\".concat(keyId),\n        component: textInput,\n        inputAttr: {\n          fluid: true,\n          placeholder: 'Value',\n          type: 'text'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(Table.HeaderCell, {\n        textAlign: 'center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"green\",\n        icon: 'plus',\n        onClick: function onClick() {\n          return _this.generateInputOption(keyId);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })))));\n    };\n\n    _this.renderInputOptions = function (options, keyId) {\n      return React.createElement(Popup, {\n        key: \"inputOption-\".concat(keyId),\n        position: \"bottom center\",\n        trigger: React.createElement(Button, {\n          type: \"button\",\n          color: \"blue\",\n          icon: \"caret down\",\n          content: \"Add options (\".concat(_.values(options).length, \") \"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }),\n        on: \"click\",\n        wide: \"very\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, _this.renderInputOptionList(options, keyId));\n    };\n\n    _this.renderInputList = function () {\n      if (_.values(_this.props.listInput) < 1) return React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        colSpan: 6,\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"No inputs yet\"))));\n      return _.values(_this.props.listInput).map(function (item, key) {\n        return React.createElement(Table.Row, {\n          key: \"formTableDetail-content-\".concat(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, item.type), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, item.name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, item.label), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, item.parameter), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, item.type === 'select' ? _this.renderInputOptions(item.options, item.id) : '-'), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          bordered: true,\n          inverted: true,\n          color: \"red\",\n          name: \"trash\",\n          onClick: function onClick() {\n            return _this.props.removeInput(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }), React.createElement(Icon, {\n          bordered: true,\n          inverted: true,\n          color: \"yellow\",\n          name: \"edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        })));\n      });\n    };\n\n    _this.generateInput = function () {\n      _this.props.generateInput();\n\n      _this.props.dispatch(change('detailFormClient', 'genType', ''));\n\n      _this.props.dispatch(change('detailFormClient', 'genName', ''));\n\n      _this.props.dispatch(change('detailFormClient', 'genLabel', ''));\n\n      _this.props.dispatch(change('detailFormClient', 'genParameter', ''));\n    };\n\n    return _this;\n  }\n\n  _createClass(DetailFormClient, [{\n    key: \"mainForm\",\n    value: function mainForm() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: 'name',\n        component: textInput,\n        validate: [required],\n        label: 'Name of form',\n        inputAttr: {\n          placeholder: 'Name form',\n          type: 'text'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: 'tool_name',\n        component: textInput,\n        validate: [required],\n        label: 'Tool reference in API',\n        inputAttr: {\n          placeholder: 'Tool reference',\n          type: 'text'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: 'published',\n        component: sliderInput,\n        label: 'Publish form in client',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"inputsForm\",\n    value: function inputsForm() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: 'genType',\n        component: selectInput,\n        label: 'Input type',\n        inputAttr: {\n          fluid: true,\n          placeholder: 'Input type',\n          options: this.options\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: 'genName',\n        component: textInput,\n        label: 'Name',\n        inputAttr: {\n          fluid: true,\n          placeholder: 'Name',\n          type: 'text'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: 'genLabel',\n        component: textInput,\n        label: 'Label',\n        inputAttr: {\n          fluid: true,\n          placeholder: 'Label',\n          type: 'text'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: 'genParameter',\n        component: textInput,\n        label: 'Parameter reference',\n        inputAttr: {\n          fluid: true,\n          placeholder: 'Parameter reference',\n          type: 'text'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: 'green',\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.generateInput();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Generate\")), React.createElement(Table, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Type\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Label\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Parameter\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Options\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, this.renderInputList())));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ComponentFrame, {\n        name: 'Edit forms',\n        description: 'Edit a client form',\n        breadCrumb: \"\".concat(this.props.client.name, \" / Forms / Edit form\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        panes: this.panes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        disabled: this.props.submitting,\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return DetailFormClient;\n}(Component);\n\nexport default reduxForm({\n  form: 'detailFormClient',\n  enableReinitialize: true\n})(DetailFormClient);","map":{"version":3,"sources":["/var/www/html/tmpVersion/back_end_afst_system/src/components/pages/client/form/DetailFormClient.js"],"names":["React","Component","Button","Icon","Table","Checkbox","Form","Tab","Dropdown","Popup","ComponentFrame","Field","reduxForm","change","textInput","sliderInput","selectInput","required","_","DetailFormClient","panes","menuItem","render","mainForm","inputsForm","options","key","text","value","onSubmit","formValues","props","generateInputOption","id","dispatch","removeInputOption","index","renderInputOptionList","keyId","values","map","item","fluid","placeholder","type","renderInputOptions","length","renderInputList","listInput","name","label","parameter","removeInput","generateInput","client","handleSubmit","submitting","form","enableReinitialize"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,KAHJ,EAIIC,QAJJ,EAIcC,IAJd,EAIoBC,GAJpB,EAIyBC,QAJzB,EAImCC,KAJnC,QAKO,mBALP;AAOA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,MAA1B,QAAuC,YAAvC;AACA,SAAQC,SAAR,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAkD,oCAAlD;AACA,SAASC,QAAT,QAAwB,2CAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEMC,gB;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ,CACJ;AAAEC,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,MAAM,EAAE;AAAA,eAAM,oBAAC,GAAD,CAAK,IAAL;AAAU,UAAA,GAAG,EAAE,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyC,MAAKC,QAAL,EAAzC,CAAN;AAAA;AAA5B,KADI,EAEJ;AAAEF,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,MAAM,EAAE;AAAA,eAAM,oBAAC,GAAD,CAAK,IAAL;AAAU,UAAA,GAAG,EAAE,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyC,MAAKE,UAAL,EAAzC,CAAN;AAAA;AAA9B,KAFI,EAGJ;AAAEH,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,MAAM,EAAE;AAAA,eAAM,oBAAC,GAAD,CAAK,IAAL;AAAU,UAAA,GAAG,EAAE,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN;AAAA;AAA9B,KAHI,C;UAMRG,O,GAAU,CACN;AAAEC,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,IAAI,EAAE,MAAlB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KADM,EAEN;AAAEF,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,IAAI,EAAE,MAAlB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAFM,EAGN;AAAEF,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,IAAI,EAAE,QAAlB;AAA4BC,MAAAA,KAAK,EAAE;AAAnC,KAHM,C;;UAQVC,Q,GAAW,UAACC,UAAD,EAAe;AACtB,YAAKC,KAAL,CAAWF,QAAX,CAAoBC,UAApB;AACH,K;;UACDE,mB,GAAsB,UAACC,EAAD,EAAO;AACzB,YAAKF,KAAL,CAAWC,mBAAX,CAA+BC,EAA/B;;AACA,YAAKF,KAAL,CAAWG,QAAX,CAAoBrB,MAAM,CAAC,kBAAD,2BAAuCoB,EAAvC,GAA6C,EAA7C,CAA1B;;AACA,YAAKF,KAAL,CAAWG,QAAX,CAAoBrB,MAAM,CAAC,kBAAD,2BAAuCoB,EAAvC,GAA6C,EAA7C,CAA1B;AACH,K;;UACDE,iB,GAAoB,UAACF,EAAD,EAAKG,KAAL,EAAc;AAC9B,YAAKL,KAAL,CAAWI,iBAAX,CAA6BF,EAA7B,EAAiCG,KAAjC;AACH,K;;UAgCDC,qB,GAAwB,UAACZ,OAAD,EAAUa,KAAV,EAAmB;AACvC,aACI,oBAAC,KAAD;AAAO,QAAA,MAAM,MAAb;AAAc,QAAA,MAAM,MAApB;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,KAAK,EAAE;AAAC,sBAAY;AAAb,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,UAAP;AAAkB,QAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAkB,QAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI,oBAAC,KAAD,CAAO,UAAP;AAAkB,QAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADJ,CADJ,EAQI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACHpB,CAAC,CAACqB,MAAF,CAASd,OAAT,EAAkBe,GAAlB,CACD,UAACC,IAAD,EAAOf,GAAP;AAAA,eACI,oBAAC,KAAD,CAAO,GAAP;AAAW,UAAA,GAAG,wBAAiBY,KAAjB,cAA0BZ,GAA1B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAae,IAAI,CAACd,IAAlB,CADJ,EAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAac,IAAI,CAACb,KAAlB,CAFJ,EAGI,oBAAC,KAAD,CAAO,IAAP;AACI,UAAA,SAAS,EAAE,QADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,MAAD;AACI,UAAA,KAAK,EAAC,KADV;AAEI,UAAA,IAAI,EAAE,OAFV;AAGI,UAAA,OAAO,EAAE;AAAA,mBAAI,MAAKO,iBAAL,CAAuBG,KAAvB,EAA8BG,IAAI,CAACR,EAAnC,CAAJ;AAAA,WAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CAHJ,CADJ;AAAA,OADC,CADG,CARJ,EAyBI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,SAAS,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,2BAAoBK,KAApB,CADR;AAEI,QAAA,SAAS,EAAExB,SAFf;AAGI,QAAA,SAAS,EAAE;AACP4B,UAAAA,KAAK,EAAC,IADC;AAEPC,UAAAA,WAAW,EAAC,MAFL;AAGPC,UAAAA,IAAI,EAAC;AAHE,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAYI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACA,QAAA,IAAI,2BAAoBN,KAApB,CADJ;AAEA,QAAA,SAAS,EAAExB,SAFX;AAGA,QAAA,SAAS,EAAE;AACP4B,UAAAA,KAAK,EAAC,IADC;AAEPC,UAAAA,WAAW,EAAC,OAFL;AAGPC,UAAAA,IAAI,EAAC;AAHE,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAZJ,EAsBI,oBAAC,KAAD,CAAO,UAAP;AAAmB,QAAA,SAAS,EAAE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwC,oBAAC,MAAD;AAAS,QAAA,KAAK,EAAC,OAAf;AAAuB,QAAA,IAAI,EAAE,MAA7B;AACvC,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAKZ,mBAAL,CAAyBM,KAAzB,CAAJ;AAAA,SAD8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC,CAtBJ,CADJ,CAzBJ,CADJ;AAuDH,K;;UACDO,kB,GAAqB,UAACpB,OAAD,EAAUa,KAAV,EAAmB;AACpC,aACI,oBAAC,KAAD;AACI,QAAA,GAAG,wBAAiBA,KAAjB,CADP;AAEI,QAAA,QAAQ,EAAC,eAFb;AAGI,QAAA,OAAO,EACH,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,MAA5B;AAAmC,UAAA,IAAI,EAAC,YAAxC;AAAqD,UAAA,OAAO,yBAAkBpB,CAAC,CAACqB,MAAF,CAASd,OAAT,EAAkBqB,MAApC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJR;AAMI,QAAA,EAAE,EAAC,OANP;AAOI,QAAA,IAAI,EAAC,MAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASK,MAAKT,qBAAL,CAA2BZ,OAA3B,EAAoCa,KAApC,CATL,CADJ;AAaH,K;;UACDS,e,GAAkB,YAAK;AAEnB,UAAG7B,CAAC,CAACqB,MAAF,CAAS,MAAKR,KAAL,CAAWiB,SAApB,IAAiC,CAApC,EACI,OACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,OAAO,EAAE,CAArB;AAAwB,QAAA,SAAS,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAH,CAA3C,CADJ,CADJ;AAKJ,aAAO9B,CAAC,CAACqB,MAAF,CAAS,MAAKR,KAAL,CAAWiB,SAApB,EAA+BR,GAA/B,CACH,UAACC,IAAD,EAAOf,GAAP;AAAA,eACI,oBAAC,KAAD,CAAO,GAAP;AAAW,UAAA,GAAG,oCAA6BA,GAA7B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAae,IAAI,CAACG,IAAlB,CADJ,EAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaH,IAAI,CAACQ,IAAlB,CAFJ,EAGI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaR,IAAI,CAACS,KAAlB,CAHJ,EAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaT,IAAI,CAACU,SAAlB,CAJJ,EAKI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAcV,IAAI,CAACG,IAAL,KAAc,QAAf,GAAyB,MAAKC,kBAAL,CAAwBJ,IAAI,CAAChB,OAA7B,EAAsCgB,IAAI,CAACR,EAA3C,CAAzB,GAAwE,GAArF,CALJ,EAMI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,QAAQ,MAAd;AAAe,UAAA,QAAQ,MAAvB;AAAwB,UAAA,KAAK,EAAC,KAA9B;AAAoC,UAAA,IAAI,EAAC,OAAzC;AAAiD,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKF,KAAL,CAAWqB,WAAX,CAAuBX,IAAI,CAACR,EAA5B,CAAN;AAAA,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,IAAD;AAAM,UAAA,QAAQ,MAAd;AAAe,UAAA,QAAQ,MAAvB;AAAwB,UAAA,KAAK,EAAC,QAA9B;AAAuC,UAAA,IAAI,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CANJ,CADJ;AAAA,OADG,CAAP;AAeH,K;;UACDoB,a,GAAgB,YAAK;AACjB,YAAKtB,KAAL,CAAWsB,aAAX;;AACA,YAAKtB,KAAL,CAAWG,QAAX,CAAoBrB,MAAM,CAAC,kBAAD,EAAqB,SAArB,EAAgC,EAAhC,CAA1B;;AACA,YAAKkB,KAAL,CAAWG,QAAX,CAAoBrB,MAAM,CAAC,kBAAD,EAAqB,SAArB,EAAgC,EAAhC,CAA1B;;AACA,YAAKkB,KAAL,CAAWG,QAAX,CAAoBrB,MAAM,CAAC,kBAAD,EAAqB,UAArB,EAAiC,EAAjC,CAA1B;;AACA,YAAKkB,KAAL,CAAWG,QAAX,CAAoBrB,MAAM,CAAC,kBAAD,EAAqB,cAArB,EAAqC,EAArC,CAA1B;AACH,K;;;;;;;+BArIS;AACN,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,MADV;AAEI,QAAA,SAAS,EAAEC,SAFf;AAGI,QAAA,QAAQ,EAAE,CAAEG,QAAF,CAHd;AAII,QAAA,KAAK,EAAE,cAJX;AAKI,QAAA,SAAS,EAAE;AACP0B,UAAAA,WAAW,EAAC,WADL;AAEPC,UAAAA,IAAI,EAAC;AAFE,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAWI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,WADV;AAEI,QAAA,SAAS,EAAE9B,SAFf;AAGI,QAAA,QAAQ,EAAE,CAAEG,QAAF,CAHd;AAII,QAAA,KAAK,EAAE,uBAJX;AAKI,QAAA,SAAS,EAAE;AACP0B,UAAAA,WAAW,EAAC,gBADL;AAEPC,UAAAA,IAAI,EAAC;AAFE,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAqBI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,WADV;AAEI,QAAA,SAAS,EAAE7B,WAFf;AAGI,QAAA,KAAK,EAAE,wBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBJ,CADJ;AA6BH;;;iCAwGW;AAAA;;AACR,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,SADV;AAEI,QAAA,SAAS,EAAEC,WAFf;AAGI,QAAA,KAAK,EAAE,YAHX;AAII,QAAA,SAAS,EAAE;AACP0B,UAAAA,KAAK,EAAC,IADC;AAEPC,UAAAA,WAAW,EAAC,YAFL;AAGPlB,UAAAA,OAAO,EAAC,KAAKA;AAHN,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAWI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,SADV;AAEI,QAAA,SAAS,EAAEX,SAFf;AAGI,QAAA,KAAK,EAAE,MAHX;AAII,QAAA,SAAS,EAAE;AACP4B,UAAAA,KAAK,EAAC,IADC;AAEPC,UAAAA,WAAW,EAAC,MAFL;AAGPC,UAAAA,IAAI,EAAC;AAHE,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,EAqBI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,UADV;AAEI,QAAA,SAAS,EAAE9B,SAFf;AAGI,QAAA,KAAK,EAAE,OAHX;AAII,QAAA,SAAS,EAAE;AACP4B,UAAAA,KAAK,EAAC,IADC;AAEPC,UAAAA,WAAW,EAAC,OAFL;AAGPC,UAAAA,IAAI,EAAC;AAHE,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBJ,EA+BI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,cADV;AAEI,QAAA,SAAS,EAAE9B,SAFf;AAGI,QAAA,KAAK,EAAE,qBAHX;AAII,QAAA,SAAS,EAAE;AACP4B,UAAAA,KAAK,EAAC,IADC;AAEPC,UAAAA,WAAW,EAAC,qBAFL;AAGPC,UAAAA,IAAI,EAAC;AAHE,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/BJ,EAyCI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,OAAf;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAsC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACS,aAAL,EAAN;AAAA,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzCJ,CADJ,EA4CI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,EAKI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,EAMI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ,CADJ,EAWI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKN,eAAL,EADL,CAXJ,CA5CJ,CADJ;AA8DH;;;6BACQ;AACL,aACI,oBAAC,cAAD;AACI,QAAA,IAAI,EAAE,YADV;AAEI,QAAA,WAAW,EAAE,oBAFjB;AAGI,QAAA,UAAU,YAAK,KAAKhB,KAAL,CAAWuB,MAAX,CAAkBL,IAAvB,yBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWwB,YAAX,CAAwB,KAAK1B,QAA7B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE,KAAKT,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWyB,UAA3C;AAAuD,QAAA,KAAK,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CALJ,CADJ;AAYH;;;;EA9O0BvD,S;;AAiP/B,eAAeW,SAAS,CAAC;AACrB6C,EAAAA,IAAI,EAAC,kBADgB;AAErBC,EAAAA,kBAAkB,EAAG;AAFA,CAAD,CAAT,CAGZvC,gBAHY,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {\n    Button,\n    Icon,\n    Table,\n    Checkbox, Form, Tab, Dropdown, Popup\n} from 'semantic-ui-react'\n\nimport ComponentFrame from \"../../../modules/ComponentFrame\";\nimport {Field, reduxForm, change} from \"redux-form\";\nimport {textInput, sliderInput, selectInput} from \"../../../helpers/redux-form-inputs\";\nimport { required} from \"../../../../constants/formValidationRules\";\nimport _ from 'lodash'\n\nclass DetailFormClient extends Component{\n\n    panes = [\n        { menuItem: 'Form', render: () => <Tab.Pane key={'detailFormCLient-tab1'}>{this.mainForm()}</Tab.Pane>},\n        { menuItem: 'Inputs', render: () => <Tab.Pane key={'detailFormCLient-tab2'}>{this.inputsForm()}</Tab.Pane>},\n        { menuItem: 'Config', render: () => <Tab.Pane key={'detailFormCLient-tab3'}>test</Tab.Pane>},\n    ]\n\n    options = [\n        { key: 't', text: 'Text', value: 'text' },\n        { key: 'f', text: 'File', value: 'file' },\n        { key: 's', text: 'Select', value: 'select' },\n    ]\n\n\n    // render form overview\n    onSubmit = (formValues) =>{\n        this.props.onSubmit(formValues)\n    };\n    generateInputOption = (id) =>{\n        this.props.generateInputOption(id);\n        this.props.dispatch(change('detailFormClient', `genOptionValue-${id}`, ''));\n        this.props.dispatch(change('detailFormClient', `genOptionLabel-${id}`, ''));\n    };\n    removeInputOption = (id, index) =>{\n        this.props.removeInputOption(id, index);\n    };\n    mainForm(){\n        return(\n            <div>\n                <Field\n                    name={'name'}\n                    component={textInput}\n                    validate={[ required ]}\n                    label={'Name of form'}\n                    inputAttr={{\n                        placeholder:'Name form',\n                        type:'text',\n                    }}\n                />\n                <Field\n                    name={'tool_name'}\n                    component={textInput}\n                    validate={[ required ]}\n                    label={'Tool reference in API'}\n                    inputAttr={{\n                        placeholder:'Tool reference',\n                        type:'text',\n                    }}\n                />\n                <Field\n                    name={'published'}\n                    component={sliderInput}\n                    label={'Publish form in client'}\n                />\n            </div>\n        )\n    }\n    renderInputOptionList = (options, keyId) =>{\n        return (\n            <Table padded celled size='small' style={{'minWidth': 400}}>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell width={3}>Label</Table.HeaderCell>\n                        <Table.HeaderCell width={3}>Value</Table.HeaderCell>\n                        <Table.HeaderCell width={1}> </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n            {_.values(options).map(\n            (item, key) =>(\n                <Table.Row key={`optionInput-${keyId}-${key}`}>\n                    <Table.Cell>{item.text}</Table.Cell>\n                    <Table.Cell>{item.value}</Table.Cell>\n                    <Table.Cell\n                        textAlign={'center'}>\n                        <Button\n                            color='red'\n                            icon={'minus'}\n                            onClick={()=>this.removeInputOption(keyId, item.id)}/>\n                    </Table.Cell>\n                </Table.Row>\n            )\n        )}\n                </Table.Body>\n                <Table.Footer fullWidth>\n                    <Table.Row>\n                        <Table.HeaderCell>\n                            <Field\n                                name={`genOptionLabel-${keyId}`}\n                                component={textInput}\n                                inputAttr={{\n                                    fluid:true,\n                                    placeholder:'Text',\n                                    type:'text'\n                                }}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                            <Field\n                            name={`genOptionValue-${keyId}`}\n                            component={textInput}\n                            inputAttr={{\n                                fluid:true,\n                                placeholder:'Value',\n                                type:'text'\n                            }}\n                        /></Table.HeaderCell>\n                        <Table.HeaderCell  textAlign={'center'}><Button  color='green' icon={'plus'}\n                         onClick={()=>this.generateInputOption(keyId)}/></Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>\n        )\n    }\n    renderInputOptions = (options, keyId) =>{\n        return (\n            <Popup\n                key={`inputOption-${keyId}`}\n                position='bottom center'\n                trigger={\n                    <Button type='button' color='blue' icon='caret down' content={`Add options (${_.values(options).length}) `} />\n                }\n                on='click'\n                wide='very'\n            >\n                {this.renderInputOptionList(options, keyId)}\n            </Popup>\n        )\n    }\n    renderInputList = () =>{\n\n        if(_.values(this.props.listInput) < 1)\n            return (\n                <Table.Row>\n                    <Table.Cell colSpan={6} textAlign=\"center\"><b><i>No inputs yet</i></b></Table.Cell>\n                </Table.Row>\n            )\n        return _.values(this.props.listInput).map(\n            (item, key) => (\n                <Table.Row key={`formTableDetail-content-${key}`}>\n                    <Table.Cell>{item.type}</Table.Cell>\n                    <Table.Cell>{item.name}</Table.Cell>\n                    <Table.Cell>{item.label}</Table.Cell>\n                    <Table.Cell>{item.parameter}</Table.Cell>\n                    <Table.Cell>{(item.type === 'select')?this.renderInputOptions(item.options, item.id):'-'}</Table.Cell>\n                    <Table.Cell>\n                        <Icon bordered inverted color='red' name='trash' onClick={() => this.props.removeInput(item.id)} />\n                        <Icon bordered inverted color='yellow' name='edit' />\n                    </Table.Cell>\n                </Table.Row>\n            )\n        )\n    }\n    generateInput = () =>{\n        this.props.generateInput()\n        this.props.dispatch(change('detailFormClient', 'genType', ''));\n        this.props.dispatch(change('detailFormClient', 'genName', ''));\n        this.props.dispatch(change('detailFormClient', 'genLabel', ''));\n        this.props.dispatch(change('detailFormClient', 'genParameter', ''));\n    };\n    inputsForm(){\n        return(\n            <div>\n                <Form.Group widths='equal'>\n                    <Field\n                        name={'genType'}\n                        component={selectInput}\n                        label={'Input type'}\n                        inputAttr={{\n                            fluid:true,\n                            placeholder:'Input type',\n                            options:this.options\n                        }}\n                    />\n                    <Field\n                        name={'genName'}\n                        component={textInput}\n                        label={'Name'}\n                        inputAttr={{\n                            fluid:true,\n                            placeholder:'Name',\n                            type:'text',\n                        }}\n                    />\n                    <Field\n                        name={'genLabel'}\n                        component={textInput}\n                        label={'Label'}\n                        inputAttr={{\n                            fluid:true,\n                            placeholder:'Label',\n                            type:'text'\n                        }}\n                    />\n                    <Field\n                        name={'genParameter'}\n                        component={textInput}\n                        label={'Parameter reference'}\n                        inputAttr={{\n                            fluid:true,\n                            placeholder:'Parameter reference',\n                            type:'text'\n                        }}\n                    />\n                    <Button color={'green'} type='button' onClick={() => this.generateInput()}>Generate</Button>\n                </Form.Group>\n                <Table widths='equal'>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Type</Table.HeaderCell>\n                            <Table.HeaderCell>Name</Table.HeaderCell>\n                            <Table.HeaderCell>Label</Table.HeaderCell>\n                            <Table.HeaderCell>Parameter</Table.HeaderCell>\n                            <Table.HeaderCell>Options</Table.HeaderCell>\n                            <Table.HeaderCell></Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.renderInputList()}\n                    </Table.Body>\n                </Table>\n        </div>\n        )\n    }\n    render() {\n        return(\n            <ComponentFrame\n                name={'Edit forms'}\n                description={'Edit a client form'}\n                breadCrumb={`${this.props.client.name} / Forms / Edit form`}\n            >\n                <Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <Tab panes={this.panes} />\n                <Button type='submit' disabled={this.props.submitting} fluid>Save</Button>\n                </Form>\n            </ComponentFrame>\n        )\n    }\n}\n\nexport default reduxForm({\n    form:'detailFormClient',\n    enableReinitialize : true\n})(DetailFormClient)\n"]},"metadata":{},"sourceType":"module"}