{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport SascWebApi from '../../apis/SascWeb';\nimport { client } from '../../constants/types';\n\nvar verifyGetClients = function verifyGetClients(response) {\n  if (response.data.length <= 1) {\n    return {\n      type: client.CLIENT_LIST_FAILED\n    };\n  }\n\n  return {\n    type: client.CLIENT_LIST_SUCCESS,\n    payload: response.data.items\n  };\n};\n\nexport var getClients = function getClients() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return SascWebApi.get('/client/list');\n\n              case 2:\n                response = _context.sent;\n                dispatch(verifyGetClients(response));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar verifyClientRequest = function verifyClientRequest(response) {\n  if (response.data.success === false) {\n    return {\n      type: client.CLIENT_DEACTIVATE\n    };\n  }\n\n  return {\n    type: client.CLIENT_ACTIVATE,\n    payload: response.data.item\n  };\n};\n\nexport var setActiveClient = function setActiveClient(requestedClient) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(requestedClient !== getState().activeClient.alias)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return SascWebApi.get(\"/client/\".concat(requestedClient));\n\n              case 3:\n                response = _context2.sent;\n                dispatch(verifyClientRequest(response));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/var/www/html/tmpVersion/back_end_afst_system/src/actions/client/clientActions.js"],"names":["SascWebApi","client","verifyGetClients","response","data","length","type","CLIENT_LIST_FAILED","CLIENT_LIST_SUCCESS","payload","items","getClients","dispatch","get","verifyClientRequest","success","CLIENT_DEACTIVATE","CLIENT_ACTIVATE","item","setActiveClient","requestedClient","getState","activeClient","alias"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,oBAAvB;AACA,SAAQC,MAAR,QAAqB,uBAArB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAa;AAElC,MAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,IAAwB,CAA3B,EAA6B;AACzB,WAAO;AACHC,MAAAA,IAAI,EAAEL,MAAM,CAACM;AADV,KAAP;AAGH;;AACD,SAAO;AACHD,IAAAA,IAAI,EAAEL,MAAM,CAACO,mBADV;AAEHC,IAAAA,OAAO,EAAEN,QAAQ,CAACC,IAAT,CAAcM;AAFpB,GAAP;AAIH,CAXD;;AAaA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACLZ,UAAU,CAACa,GAAX,CAAe,cAAf,CADK;;AAAA;AACtBV,gBAAAA,QADsB;AAE5BS,gBAAAA,QAAQ,CAACV,gBAAgB,CAACC,QAAD,CAAjB,CAAR;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAIP,IAAMW,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACX,QAAD,EAAa;AACrC,MAAGA,QAAQ,CAACC,IAAT,CAAcW,OAAd,KAA0B,KAA7B,EAAmC;AAC/B,WAAO;AACHT,MAAAA,IAAI,EAAEL,MAAM,CAACe;AADV,KAAP;AAGH;;AACD,SAAO;AACHV,IAAAA,IAAI,EAAEL,MAAM,CAACgB,eADV;AAEHR,IAAAA,OAAO,EAAEN,QAAQ,CAACC,IAAT,CAAcc;AAFpB,GAAP;AAIH,CAVD;;AAYA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAqB,kBAAOR,QAAP,EAAiBS,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAE7CD,eAAe,KAAKC,QAAQ,GAAGC,YAAX,CAAwBC,KAFC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGrBvB,UAAU,CAACa,GAAX,mBAA0BO,eAA1B,EAHqB;;AAAA;AAGtCjB,gBAAAA,QAHsC;AAI5CS,gBAAAA,QAAQ,CAACE,mBAAmB,CAACX,QAAD,CAApB,CAAR;;AAJ4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAArB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import SascWebApi from '../../apis/SascWeb'\nimport {client} from '../../constants/types'\n\nconst verifyGetClients = (response) =>{\n\n    if(response.data.length <= 1){\n        return {\n            type: client.CLIENT_LIST_FAILED\n        }\n    }\n    return {\n        type: client.CLIENT_LIST_SUCCESS,\n        payload: response.data.items\n    }\n};\n\nexport const getClients = () => async (dispatch) => {\n    const response = await SascWebApi.get('/client/list');\n    dispatch(verifyGetClients(response));\n};\nconst verifyClientRequest = (response) =>{\n    if(response.data.success === false){\n        return {\n            type: client.CLIENT_DEACTIVATE\n        }\n    }\n    return {\n        type: client.CLIENT_ACTIVATE,\n        payload: response.data.item\n    }\n};\n\nexport const setActiveClient = (requestedClient) => async (dispatch, getState) =>{\n\n    if(requestedClient !== getState().activeClient.alias){\n        const response = await SascWebApi.get(`/client/${requestedClient}`);\n        dispatch(verifyClientRequest(response));\n    }\n}"]},"metadata":{},"sourceType":"module"}