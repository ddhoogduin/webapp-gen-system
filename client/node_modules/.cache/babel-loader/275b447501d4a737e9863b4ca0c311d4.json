{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/tmpVersion/back_end_afst_system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport SascWebApi from '../../apis/SascWeb';\nimport { Authentication } from '../../constants/types';\n\nvar verifyLogin = function verifyLogin(response) {\n  if (response.data.success) {\n    return {\n      type: Authentication.LOGIN_SUCCESS,\n      payload: response.data.id\n    };\n  } else {\n    return {\n      type: Authentication.LOGIN_FAILED,\n      payload: response.data.error\n    };\n  }\n};\n\nexport var userLogin = function userLogin(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return SascWebApi.post('/auth/login', formValues);\n\n              case 2:\n                response = _context.sent;\n                dispatch(verifyLogin(response));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/var/www/html/tmpVersion/back_end_afst_system/src/actions/user/authenticationUserActions.js"],"names":["SascWebApi","Authentication","verifyLogin","response","data","success","type","LOGIN_SUCCESS","payload","id","LOGIN_FAILED","error","userLogin","formValues","dispatch","getState","post"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,oBAAvB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAC9B,MAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAAyB;AACrB,WAAO;AACHC,MAAAA,IAAI,EAAEL,cAAc,CAACM,aADlB;AAEHC,MAAAA,OAAO,EAAEL,QAAQ,CAACC,IAAT,CAAcK;AAFpB,KAAP;AAIH,GALD,MAKK;AACD,WAAO;AACHH,MAAAA,IAAI,EAAEL,cAAc,CAACS,YADlB;AAEHF,MAAAA,OAAO,EAAEL,QAAQ,CAACC,IAAT,CAAcO;AAFpB,KAAP;AAIH;AACJ,CAZD;;AAaA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACZf,UAAU,CAACgB,IAAX,CAAgB,aAAhB,EAA+BH,UAA/B,CADY;;AAAA;AAC7BV,gBAAAA,QAD6B;AAEnCW,gBAAAA,QAAQ,CAACZ,WAAW,CAACC,QAAD,CAAZ,CAAR;;AAFmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B","sourcesContent":["import SascWebApi from '../../apis/SascWeb'\nimport {Authentication} from '../../constants/types'\n\nconst verifyLogin = (response) => {\n    if(response.data.success){\n        return {\n            type: Authentication.LOGIN_SUCCESS,\n            payload: response.data.id\n        }\n    }else{\n        return {\n            type: Authentication.LOGIN_FAILED,\n            payload: response.data.error\n        }\n    }\n};\nexport const userLogin = formValues => async (dispatch, getState) => {\n    const response = await SascWebApi.post('/auth/login', formValues);\n    dispatch(verifyLogin(response));\n};\n"]},"metadata":{},"sourceType":"module"}